{"version":3,"sources":["Controls/TextField.js","Controls/AutoComplete.js","Hooks/UseInitialFormik.js","Components/FormAdd1.js","Components/FormAdd2.js","Components/FormAdd3.js","Controls/CheckBox.js","Components/FormControl.js","Controls/DatePick.js","Controls/TimePick.js","Components/FormDatePicker.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","DefualtView","props","field","label","style","size","isError","classes","className","TextField","error","variant","id","InputLabelProps","shrink","TextFieldControl","form","useState","state","DefaultView","dataSource","onChange","onRenderInput","Autocomplete","options","getOptionLabel","option","NAME","noOptionsText","renderInput","AutoComplete","onChangeValue","e","value","setFieldValue","name","params","placeholder","UseInitialFormik","example","fieldData","fullname","FULLNAME","gender","GENDER","status","STATUS","status2","STATUS2","initailFormAdd1","email","EMAIL","initailFormAdd2","tel","TEL","initailFormAdd3","age","AGE","initailFormDatePicker","date","DATE","Date","time","TIME","paper","padding","spacing","textAlign","color","palette","text","secondary","buttonAction","alignItem","margin","FormAdd1","fiedData","genderMockdata","onClearFiedData","onRestoreForm","formMikRef","useRef","initialFormHook","useInitialFormik","handleClearForm","handleRestoreForm","current","resetForm","enableReinitialize","initialValues","bindFormikProps","Paper","Grid","container","direction","justify","alignItems","item","xs","component","width","Button","onClick","handleChange","FormControlLabel","control","Checkbox","checked","CheckBox","target","FormControl","handleReset","startDate","isClearable","selected","customInput","DatePick","getDate","getTime","startTime","format","showTimeSelect","showTimeSelectOnly","timeCaption","timeIntervals","dateFormat","TimePick","FormDatePicker","breakpoints","down","App","initialState","formAdd1","CODE","formAdd2","formAdd3","genderMock","setState","handleClearFiedData","formName","prevState","alert","md","FormAdd2","FormAdd3","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6367fe5a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Field, Form, Formik, FormikProps } from 'formik'\r\n// Import Materail ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}))\r\n\r\n/***\r\n * Guide line\r\n * dev O00085 Somchai\r\n * \r\n *  <Field\r\n      name=\"fullname\"\r\n      label=\"Fullname\"\r\n      component={TextField}\r\n      style={{ width: '100%' }}\r\n    />\r\n * \r\n */\r\n\r\nconst TextFieldControl = (props) => {\r\n\r\n  const {\r\n    form,\r\n    field,\r\n    label,\r\n    style,\r\n    size=\"small\"\r\n  } = props\r\n\r\n  const [state, setState] = useState({ error: false })\r\n\r\n  return (\r\n    <DefualtView\r\n      field={field}\r\n      label={label}\r\n      style={style}\r\n      size={size}\r\n      isError={state.error}\r\n    />\r\n  )\r\n}\r\n\r\n/**\r\n * function default view\r\n * dev O00085 Somchai\r\n * @param {*} props \r\n */\r\nconst DefualtView = (props) => {\r\n\r\n  const {\r\n    field,\r\n    label,\r\n    style,\r\n    size,\r\n    isError\r\n  } = props\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        error={isError}\r\n        {...field}\r\n        style={style}\r\n        label={label}\r\n        size={size}\r\n        variant=\"outlined\"\r\n        id=\"outlined-`${field}`\"\r\n        InputLabelProps={{ shrink: true }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextFieldControl\r\n","import React, { useState } from 'react'\r\n// Import Materail ui\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\n/***\r\n * Guide line\r\n * dev O00085 Somchai\r\n * \r\n *  <Field\r\n      name=\"gender\"\r\n      label=\"Gender\"\r\n      component={Autocomplete}\r\n      dataSource={genderMockdata}\r\n      style={{ width: '100%' }}\r\n    />\r\n * \r\n */\r\n\r\n\r\nconst AutoComplete = (props) => {\r\n\r\n  const {\r\n    form,\r\n    field,\r\n    label,\r\n    style,\r\n    size = \"small\",\r\n    dataSource = [],\r\n    onChangeValue\r\n  } = props\r\n\r\n  const [state, setState] = useState({ error: false })\r\n\r\n  const handleChange = (e, value) => {\r\n    form.setFieldValue(field.name, value)\r\n    if (onChangeValue) onChangeValue(value)\r\n  }\r\n\r\n  const createRenderInput = (params) => {\r\n    return (\r\n      <TextField\r\n        error={state.error}\r\n        {...params}\r\n        label={label}\r\n        size={size}\r\n        variant=\"outlined\"\r\n        InputLabelProps={{ shrink: true }}\r\n        placeholder=\"กรุณาระบุ...\"\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <DefaultView\r\n      field={field}\r\n      style={style}\r\n      dataSource={dataSource}\r\n      onChange={handleChange}\r\n      onRenderInput={createRenderInput}\r\n    />\r\n  )\r\n}\r\n\r\n/**\r\n * function default view\r\n * dev O00085 Somchai\r\n * @param {*} props \r\n */\r\nconst DefaultView = (props) => {\r\n\r\n  const {\r\n    field,\r\n    style,\r\n    dataSource,\r\n    onChange,\r\n    onRenderInput\r\n  } = props\r\n\r\n  return (\r\n    <Autocomplete\r\n      {...field}\r\n      style={style}\r\n      id=\"combo-box-`${field.name}`\"\r\n      options={dataSource}\r\n      getOptionLabel={option => option.NAME}\r\n      noOptionsText={'ไม่พบข้อมูล'}\r\n      onChange={onChange}\r\n      renderInput={onRenderInput}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AutoComplete\r\n","const UseInitialFormik = props => {\r\n\r\n  // create initailForm (fieldData)\r\n  const example = (fieldData) => {\r\n    const empty = ''\r\n    return {\r\n      fullname: (fieldData) ? fieldData.FULLNAME : empty,\r\n      gender: (fieldData) ? fieldData.GENDER : empty,\r\n      status: (fieldData) ? fieldData.STATUS : true,\r\n      status2: (fieldData) ? fieldData.STATUS2 : false,\r\n    }\r\n  }\r\n\r\n  const initailFormAdd1 = (fieldData) => {\r\n    const empty = ''\r\n    return {\r\n      fullname: (fieldData) ? fieldData.FULLNAME : empty,\r\n      email: (fieldData) ? fieldData.EMAIL : empty,\r\n      gender: (fieldData) ? fieldData.GENDER : empty\r\n    }\r\n  }\r\n\r\n  const initailFormAdd2 = (fieldData) => {\r\n    const empty = ''\r\n    return {\r\n      fullname: (fieldData) ? fieldData.FULLNAME : empty,\r\n      tel: (fieldData) ? fieldData.TEL : empty,\r\n      gender: (fieldData) ? fieldData.GENDER : empty\r\n    }\r\n  }\r\n\r\n  const initailFormAdd3 = (fieldData) => {\r\n    const empty = ''\r\n    return {\r\n      fullname: (fieldData) ? fieldData.FULLNAME : empty,\r\n      age: (fieldData) ? fieldData.AGE : empty,\r\n      gender: (fieldData) ? fieldData.GENDER : empty\r\n    }\r\n  }\r\n\r\n  const initailFormDatePicker = (fieldData) => {\r\n    const empty = ''\r\n    return {\r\n      date: (fieldData) ? fieldData.DATE : new Date(),\r\n      time: (fieldData) ? fieldData.TIME : new Date(),\r\n    }\r\n  }\r\n\r\n  return {\r\n    example,\r\n    initailFormAdd1,\r\n    initailFormAdd2,\r\n    initailFormAdd3,\r\n    initailFormDatePicker\r\n  }\r\n}\r\n\r\nexport default UseInitialFormik\r\n","import React, { useRef } from 'react'\r\nimport { Field, Form, Formik, FormikProps } from 'formik'\r\n// Import Materail ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport Button from '@material-ui/core/Button'\r\n// Import Controls\r\nimport TextField from '../Controls/TextField'\r\nimport AutoComplete from '../Controls/AutoComplete'\r\n// Import Constants\r\n// import { initailFormAdd1 } from '../Constants/InitailFormik'\r\nimport useInitialFormik from '../Hooks/UseInitialFormik'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  buttonAction: {\r\n    alignItem: 'left',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }\r\n}))\r\n\r\nconst FormAdd1 = ({ fiedData, genderMockdata, onClearFiedData, onRestoreForm }) => {\r\n\r\n  const classes = useStyles()\r\n  const formMikRef = useRef()\r\n  const initialFormHook = useInitialFormik()\r\n\r\n  const handleClearForm = () => {\r\n    // reset fieldData in state\r\n    if (onClearFiedData) onClearFiedData('formAdd1')\r\n  }\r\n\r\n  const handleRestoreForm = () => {\r\n    if (onRestoreForm) onRestoreForm('formAdd1')\r\n    formMikRef.current.resetForm()\r\n  }\r\n\r\n  const bindFormikProps = (props) => {\r\n    formMikRef.current = props\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={initialFormHook.initailFormAdd1(fiedData)}\r\n      >\r\n        {\r\n          (props) => {\r\n\r\n            bindFormikProps(props)\r\n\r\n            return (\r\n              <Form>\r\n                <Paper className={classes.paper}>\r\n                  <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n\r\n                    <Grid item xs={12}>\r\n                      <h2>Form Add 1</h2>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"fullname\"\r\n                        label=\"ชื่อ-สกุล\"\r\n                        component={TextField}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"email\"\r\n                        label=\"อีเมล\"\r\n                        component={TextField}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"gender\"\r\n                        label=\"เพศ\"\r\n                        component={AutoComplete}\r\n                        dataSource={genderMockdata}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.buttonAction}>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={handleClearForm}>ล้างค่า</Button>\r\n                      <Button variant=\"contained\" onClick={handleRestoreForm}>คืนค่าเดิม</Button>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Paper>\r\n              </Form>\r\n            )\r\n          }\r\n        }\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormAdd1\r\n","import React, { useRef } from 'react'\r\nimport { Field, Form, Formik, FormikProps } from 'formik'\r\n// Import Materail ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport Button from '@material-ui/core/Button'\r\n// Import Controls\r\nimport TextField from '../Controls/TextField'\r\nimport AutoComplete from '../Controls/AutoComplete'\r\n// Import Constants\r\n// import { initailFormAdd2 } from '../Constants/InitailFormik'\r\nimport useInitialFormik from '../Hooks/UseInitialFormik'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  buttonAction: {\r\n    alignItem: 'left',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }\r\n}))\r\n\r\nconst FormAdd1 = ({ fiedData, genderMockdata, onClearFiedData, onRestoreForm }) => {\r\n\r\n  const classes = useStyles()\r\n  const formMikRef = useRef()\r\n  const initialFormHook = useInitialFormik()\r\n\r\n  const handleClearForm = () => {\r\n    // reset fieldData in state\r\n    if (onClearFiedData) onClearFiedData('formAdd2')\r\n  }\r\n\r\n  const handleRestoreForm = () => {\r\n    if (onRestoreForm) onRestoreForm('formAdd2')\r\n    formMikRef.current.resetForm()\r\n  }\r\n\r\n  const bindFormikProps = (props) => {\r\n    formMikRef.current = props\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={initialFormHook.initailFormAdd2(fiedData)}\r\n      >\r\n        {\r\n          (props) => {\r\n\r\n            bindFormikProps(props)\r\n\r\n            return (\r\n              <Form>\r\n                <Paper className={classes.paper}>\r\n                  <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n\r\n                    <Grid item xs={12}>\r\n                      <h2>Form Add 2</h2>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"fullname\"\r\n                        label=\"ชื่อ-สกุล\"\r\n                        component={TextField}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"tel\"\r\n                        label=\"เบอร์โทร\"\r\n                        component={TextField}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"gender\"\r\n                        label=\"เพศ\"\r\n                        component={AutoComplete}\r\n                        dataSource={genderMockdata}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.buttonAction}>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={handleClearForm}>ล้างค่า</Button>\r\n                      <Button variant=\"contained\" onClick={handleRestoreForm}>คืนค่าเดิม</Button>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Paper>\r\n              </Form>\r\n            )\r\n          }\r\n        }\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormAdd1\r\n","import React, { useRef } from 'react'\r\nimport { Field, Form, Formik, FormikProps } from 'formik'\r\n// Import Materail ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport Button from '@material-ui/core/Button'\r\n// Import Controls\r\nimport TextField from '../Controls/TextField'\r\nimport AutoComplete from '../Controls/AutoComplete'\r\n// Import Constants\r\n// import { initailFormAdd3 } from '../Constants/InitailFormik'\r\nimport useInitialFormik from '../Hooks/UseInitialFormik'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  buttonAction: {\r\n    alignItem: 'left',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }\r\n}))\r\n\r\nconst FormAdd1 = ({ fiedData, genderMockdata, onClearFiedData, onRestoreForm }) => {\r\n\r\n  const classes = useStyles()\r\n  const formMikRef = useRef()\r\n  const initialFormHook = useInitialFormik()\r\n\r\n  const handleClearForm = () => {\r\n    // reset fieldData in state\r\n    if (onClearFiedData) onClearFiedData('formAdd3')\r\n  }\r\n\r\n  const handleRestoreForm = () => {\r\n    if (onRestoreForm) onRestoreForm('formAdd3')\r\n    formMikRef.current.resetForm()\r\n  }\r\n\r\n  const bindFormikProps = (props) => {\r\n    formMikRef.current = props\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={initialFormHook.initailFormAdd3(fiedData)}\r\n      >\r\n        {\r\n          (props) => {\r\n\r\n            bindFormikProps(props)\r\n\r\n            return (\r\n              <Form>\r\n                <Paper className={classes.paper}>\r\n                  <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n\r\n                    <Grid item xs={12}>\r\n                      <h2>Form Add 3</h2>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"fullname\"\r\n                        label=\"ชื่อ-สกุล\"\r\n                        component={TextField}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"age\"\r\n                        label=\"อายุ\"\r\n                        component={TextField}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"gender\"\r\n                        label=\"เพศ\"\r\n                        component={AutoComplete}\r\n                        dataSource={genderMockdata}\r\n                        style={{\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.buttonAction}>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={handleClearForm}>ล้างค่า</Button>\r\n                      <Button variant=\"contained\" onClick={handleRestoreForm}>คืนค่าเดิม</Button>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Paper>\r\n              </Form>\r\n            )\r\n          }\r\n        }\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormAdd1\r\n","import React from 'react'\r\n// Import Materail ui\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\n/***\r\n * Guide line\r\n * dev O00085 Somchai\r\n * \r\n *  <Field\r\n      name=\"status\"\r\n      label=\"Status\"\r\n      component={CheckBox}\r\n      style={{ width: '100%' }}\r\n    />\r\n * \r\n */\r\n\r\nconst CheckBox = (props) => {\r\n\r\n  const {\r\n    form,\r\n    field,\r\n    label\r\n  } = props\r\n\r\n  const handleChange = (e) => {\r\n    form.setFieldValue(field.name, e.target.checked)\r\n  }\r\n\r\n  return (\r\n    <DefaultView\r\n      label={label}\r\n      field={field}\r\n      handleChange={handleChange}\r\n    />\r\n  )\r\n}\r\n\r\n/**\r\n * function default view\r\n * dev O00085 Somchai\r\n * @param {*} props \r\n */\r\nconst DefaultView = (props) => {\r\n\r\n  const {\r\n    field,\r\n    label,\r\n    handleChange\r\n  } = props\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          name={field.name}\r\n          color=\"primary\"\r\n          checked={field.value}\r\n          onChange={handleChange}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CheckBox\r\n","import React from 'react'\r\nimport { Field, Form, Formik, FormikProps } from 'formik'\r\n// Import Materail ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\n// Import Controls\r\nimport TextField from '../Controls/TextField'\r\nimport Autocomplete from '../Controls/AutoComplete'\r\nimport CheckBox from '../Controls/CheckBox'\r\n// Import Hooks\r\nimport useInitialFormik from '../Hooks/UseInitialFormik'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  buttonAction: {\r\n    alignItem: 'left',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }\r\n}))\r\n\r\nconst FormControl = ({ fieldData, genderMockdata }) => {\r\n\r\n  const classes = useStyles()\r\n  const initialFormHook = useInitialFormik(fieldData)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialFormHook.example(fieldData)}\r\n        >\r\n          {\r\n            (props) => {\r\n              return (\r\n                <Form>\r\n                  <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n\r\n                    <Grid item xs={12}>\r\n                      <h2>Form Example</h2>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"fullname\"\r\n                        label=\"Fullname\"\r\n                        component={TextField}\r\n                        style={{ width: '100%' }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        component={Autocomplete}\r\n                        dataSource={genderMockdata}\r\n                        style={{ width: '100%' }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"status\"\r\n                        label=\"Status\"\r\n                        component={CheckBox}\r\n                        style={{ width: '100%' }}\r\n                      />\r\n                      <Field\r\n                        name=\"status2\"\r\n                        label=\"Status2\"\r\n                        component={CheckBox}\r\n                        style={{ width: '100%' }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.buttonAction}>\r\n                      <Button variant=\"contained\" onClick={props.handleReset}>คืนค่าเดิม</Button>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Form>\r\n              )\r\n            }\r\n          }\r\n        </Formik>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormControl\r\n","import React, { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n// Import Controls\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\n/***\r\n * Guide line\r\n * dev O00085 Somchai\r\n * \r\n *  <Field\r\n      name=\"date\"\r\n      label=\"Date\"\r\n      component={DatePick}\r\n      style={{ width: '100%' }}\r\n    />\r\n * \r\n */\r\n\r\nconst DatePick = (props) => {\r\n\r\n  const {\r\n    form,\r\n    field,\r\n    style,\r\n    label,\r\n    size = \"small\"\r\n  } = props\r\n\r\n  const [state, setState] = useState({ error: false })\r\n\r\n  const getDate = () => {\r\n    let date = null\r\n    if (field.value) {\r\n      date = new Date(field.value)\r\n    }\r\n    return date\r\n  }\r\n\r\n  const handleChange = (date) => {\r\n    const getTime = (date) ? new Date(date).getTime() : ''\r\n    form.setFieldValue(field.name, getTime)\r\n  }\r\n\r\n  return (\r\n    <DefaultView\r\n      isError={state.error}\r\n      startDate={getDate()}\r\n      field={field}\r\n      style={style}\r\n      label={label}\r\n      size={size}\r\n      handleChange={handleChange}\r\n    />\r\n  )\r\n}\r\n\r\n/**\r\n * function default view\r\n * dev O00085 Somchai\r\n * @param {*} props \r\n */\r\nconst DefaultView = (props) => {\r\n\r\n  const {\r\n    isError,\r\n    startDate,\r\n    field,\r\n    style,\r\n    label,\r\n    size,\r\n    handleChange\r\n  } = props\r\n\r\n  const CustomInput = ({ value, onClick }) => {\r\n    return (\r\n      <TextField\r\n        error={isError}\r\n        id=\"outlined-`${field.name}`\"\r\n        variant=\"outlined\"\r\n        label={label}\r\n        value={value}\r\n        size={size}\r\n        onClick={onClick}\r\n        InputLabelProps={{ shrink: true }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <DatePicker\r\n      style={style}\r\n      isClearable\r\n      selected={startDate}\r\n      customInput={<CustomInput />}\r\n      onChange={(date) => handleChange(date)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DatePick\r\n","import React, { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n// Import Controls\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\n/***\r\n * Guide line\r\n * dev O00085 Somchai\r\n * \r\n *  <Field\r\n      name=\"time\"\r\n      label=\"Time\"\r\n      component={TimePick}\r\n      format={{\r\n        timeIntervals: 10,\r\n        dateFormat: 'h:mm'\r\n      }}\r\n      style={{ width: '100%' }}\r\n    />\r\n * \r\n */\r\n\r\nconst TimePick = (props) => {\r\n\r\n  const {\r\n    form,\r\n    field,\r\n    style,\r\n    label,\r\n    size = \"small\",\r\n    format = { timeIntervals: 15, dateFormat: 'h:mm aa' }\r\n  } = props\r\n\r\n  const [state, setState] = useState({ error: false })\r\n\r\n  const getDate = () => {\r\n    let date = null\r\n    if (field.value) {\r\n      date = new Date(field.value)\r\n    }\r\n    return date\r\n  }\r\n\r\n  const handleChange = (date) => {\r\n    const getTime = (date) ? new Date(date).getTime() : ''\r\n    form.setFieldValue(field.name, getTime)\r\n  }\r\n\r\n  return (\r\n    <DefaultView\r\n      isError={state.error}\r\n      startTime={getDate()}\r\n      field={field}\r\n      style={style}\r\n      label={label}\r\n      size={size}\r\n      format={format}\r\n      handleChange={handleChange}\r\n    />\r\n  )\r\n}\r\n\r\n/**\r\n * function default view\r\n * dev O00085 Somchai\r\n * @param {*} props \r\n */\r\nconst DefaultView = (props) => {\r\n\r\n  const {\r\n    isError,\r\n    startTime,\r\n    field,\r\n    style,\r\n    label,\r\n    size,\r\n    format,\r\n    handleChange\r\n  } = props\r\n\r\n  const CustomInput = ({ value, onClick }) => {\r\n    return (\r\n      <TextField\r\n        error={isError}\r\n        id=\"outlined-`${field.name}`\"\r\n        variant=\"outlined\"\r\n        label={label}\r\n        value={value}\r\n        size={size}\r\n        onClick={onClick}\r\n        InputLabelProps={{ shrink: true }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <DatePicker\r\n      style={style}\r\n      isClearable\r\n      selected={startTime}\r\n      customInput={<CustomInput />}\r\n      onChange={(date) => handleChange(date)}\r\n      showTimeSelect\r\n      showTimeSelectOnly\r\n      timeCaption=\"Time\"\r\n      timeIntervals={format.timeIntervals}\r\n      dateFormat={format.dateFormat}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TimePick\r\n","import React from 'react'\r\nimport { Field, Form, Formik, FormikProps } from 'formik'\r\n// Import Materail ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\n// Import Hooks\r\nimport useInitialFormik from '../Hooks/UseInitialFormik'\r\n// Import Control\r\nimport DatePick from '../Controls/DatePick'\r\nimport TimePick from '../Controls/TimePick'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  buttonAction: {\r\n    alignItem: 'left',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }\r\n}))\r\n\r\nconst FormDatePicker = ({ fieldData }) => {\r\n\r\n  const classes = useStyles()\r\n  const initialFormHook = useInitialFormik(fieldData)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialFormHook.initailFormDatePicker(fieldData)}\r\n        >\r\n          {\r\n            (props) => {\r\n              return (\r\n                <Form>\r\n                  <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n\r\n                    <Grid item xs={12}>\r\n                      <h2>Form Date Picker</h2>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Field\r\n                        name=\"date\"\r\n                        label=\"Date\"\r\n                        component={DatePick}\r\n                        style={{ width: '100%' }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Field\r\n                        name=\"time\"\r\n                        label=\"Time\"\r\n                        component={TimePick}\r\n                        format={{\r\n                          timeIntervals: 10,\r\n                          dateFormat: 'h:mm'\r\n                        }}\r\n                        style={{ width: '100%' }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.buttonAction}>\r\n                      <Button variant=\"contained\" onClick={props.handleReset}>คืนค่าเดิม</Button>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Form>\r\n              )\r\n            }\r\n          }\r\n        </Formik>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormDatePicker\r\n","import React, { useState } from 'react'\n// Import Materail ui\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid } from '@material-ui/core'\n// Import Control\nimport FormAdd1 from './Components/FormAdd1'\nimport FormAdd2 from './Components/FormAdd2'\nimport FormAdd3 from './Components/FormAdd3'\nimport FormControl from './Components/FormControl'\nimport FormDatePicker from './Components/FormDatePicker'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: '20px',\n    padding: 0,\n    [theme.breakpoints.down('sm')]: {\n      margin: '5px',\n    },\n  },\n}))\n\nconst App = props => {\n\n  const classes = useStyles()\n\n  const initialState = {\n    fieldData: {\n      formAdd1: {\n        FULLNAME: \"สมชาย คงทรัพย์\",\n        EMAIL: \"demo@mail.com\",\n        GENDER: { CODE: 1, NAME: \"ผู้ชาย\" },\n      },\n      formAdd2: {\n        FULLNAME: \"ลุงตู่ว เต้นเก่ง\",\n        TEL: \"08xxxxxxxx\",\n        GENDER: { CODE: 1, NAME: \"ผู้ชาย\" },\n      },\n      formAdd3: {\n        FULLNAME: \"ลุงตู่ว เต้นเก่ง\",\n        AGE: 35,\n        GENDER: { CODE: 1, NAME: \"ผู้ชาย\" },\n      }\n    },\n    genderMock: [\n      { CODE: 0, NAME: \"ผู้หญิง\" },\n      { CODE: 1, NAME: \"ผู้ชาย\" },\n    ]\n  }\n\n  const [state, setState] = useState(initialState)\n\n  /**\n   * ล้างค่าทั้งหมด\n   * @param {*} formName \n   */\n  const handleClearFiedData = (formName) => {\n    if (formName && formName !== '') {\n      setState(prevState => ({\n        ...prevState,\n        fieldData: {\n          ...prevState.fieldData,\n          [formName]: null\n        }\n      }))\n    }\n    else {\n      alert('Require form name')\n    }\n  }\n\n  /**\n   * คืนค่าเดิมจาก initail\n   * @param {*} formName \n   */\n  const handleRestoreForm = (formName) => {\n    if (formName && formName !== '') {\n      setState(prevState => ({\n        ...prevState,\n        fieldData: {\n          ...prevState.fieldData,\n          [formName]: initialState.fieldData[formName]\n        }\n      }))\n    }\n    else {\n      alert('Require form name')\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n\n        <Grid item xs={12} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <h1>Formik reset & restore (dynamic)</h1>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <FormAdd1\n            fiedData={state.fieldData.formAdd1}\n            genderMockdata={state.genderMock}\n            onClearFiedData={handleClearFiedData}\n            onRestoreForm={handleRestoreForm}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <FormAdd2\n            fiedData={state.fieldData.formAdd2}\n            genderMockdata={state.genderMock}\n            onClearFiedData={handleClearFiedData}\n            onRestoreForm={handleRestoreForm}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <FormAdd3\n            fiedData={state.fieldData.formAdd3}\n            genderMockdata={state.genderMock}\n            onClearFiedData={handleClearFiedData}\n            onRestoreForm={handleRestoreForm}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <FormControl genderMockdata={state.genderMock}/>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <FormDatePicker />\n        </Grid>\n\n      </Grid>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}